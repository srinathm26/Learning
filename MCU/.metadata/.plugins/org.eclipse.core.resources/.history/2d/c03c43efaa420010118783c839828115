/*
 * stm32f407xx.h
 *
 *  Created on: Jun 1, 2025
 *      Author: gunal
 */

#ifndef INC_STM32F407XX_H_
#define INC_STM32F407XX_H_

#include <stdint.h>

//....Memory BaseAddress
#define FLASH_BASEADDR		0x08000000U
#define SRAM1_BASEADDR		0x20000000U
#define SRAM2_BASEADDR		0x2001C000U
#define ROM_BASEADDR		0x1FFF0000U
#define SRAM_BASEADDR		SRAM1_BaseAddress

//.....

//....Peripheral Bus BaseAddess
#define PERIPH_BASEADDR     0x40000000U
#define APB1_BASEADDR 		PERIPH_BASEADDR
#define APB2_BASEADDR 		0x40010000U
#define AHB1_BASEADDR 		0x40020000U
#define AHB2_BASEADDR 		0x50000000U

//.....

//.... Peripheral on AHB1 BaseAddress
#define GPIOA_BASEADDR		0x40020000U
#define GPIOB_BASEADDR		0x40020400U
#define GPIOC_BASEADDR		0x40020800U
#define GPIOD_BASEADDR		0x40020C00U
#define GPIOE_BASEADDR		0x40021000U
#define GPIOF_BASEADDR		0x40021400U
#define GPIOG_BASEADDR		0x40021800U
#define GPIOH_BASEADDR		0x40021C00U
#define GPIOI_BASEADDR		0x40022000U
#define RCC_BASEADDR		0x40023800U
#define EXTI_BASEADDR		0x40013C00U

//.....

//.... Peripheral on APB2 BaseAddress
#define SPI1_BASEADDR		0x40013000U
#define USART1_BASEADDR		0x40011000U
#define USART6_BASEADDR		0x40011400U
#define SYSCFG_BASEADDR		0x40013800U
#define EXTI_BASEADDR		0x40013C00U

//.....

//.... I2C Peripheral on APB1 BaseAddress
#define SPI2_BASEADDR		0x40003800U
#define SPI3_BASEADDR		0x40003C00U
#define USART2_BASEADDR		0x40004400U
#define USART3_BASEADDR		0x40004800U
#define UART4_BASEADDR		0x40004C00U
#define UART5_BASEADDR		0x40005000U
#define I2C1_BASEADDR		0x40005400U
#define I2C2_BASEADDR		0x40005800U
#define I2C3_BASEADDR		0x40005C00U

//.....

typedef struct{
	volatile uint32_t MODER;
	volatile uint32_t OTYPER;
	volatile uint32_t OSPEEDR;
	volatile uint32_t PUPDR;
	volatile uint32_t IDR;
	volatile uint32_t ODR;
	volatile uint32_t BSRR;
	volatile uint32_t LCKR;
	volatile uint32_t AFR[2];
}GPIO_RegDef_t;

typedef struct{
	volatile uint32_t IMR;
	volatile uint32_t EMR;
	volatile uint32_t RTSR;
	volatile uint32_t PUPDR;
	volatile uint32_t FTSR;
	volatile uint32_t SWIER;
	volatile uint32_t PR;
}EXTI_RegDef_t;

typedef struct{
	volatile uint32_t CR;
	volatile uint32_t PLLCFGR;
	volatile uint32_t CFGR;
	volatile uint32_t CIR;
	volatile uint32_t AHB1RSTR;
	volatile uint32_t AHB2RSTR;
	volatile uint32_t AHB3RSTR;
	uint32_t Reserved1;
	volatile uint32_t APB1RSTR;
	volatile uint32_t APB2RSTR;
	uint32_t Reserved2[2];
	volatile uint32_t AHB1ENR;
	volatile uint32_t AHB2ENR;
	volatile uint32_t AHB3ENR;
	uint32_t Reserved3;
	volatile uint32_t APB1ENR;
	volatile uint32_t APB2ENR;
	uint32_t Reserved4[2];
	volatile uint32_t AHB1LPENR;
	volatile uint32_t AHB2LPENR;
	volatile uint32_t AHB3LPENR;
	uint32_t Reserved5;
	volatile uint32_t APB1LPENR;
	volatile uint32_t APB2LPENR;
	uint32_t Reserved6[2];
	volatile uint32_t BDCR;
	volatile uint32_t CSR;
	uint32_t Reserved7[2];
	volatile uint32_t SSCGR;
	volatile uint32_t PLLI2SCFGR;


}RCC_RegDef_t;

//....Peripheral definition
#define GPIOA		((GPIO_RegDef_t *)GPIOA_BASEADDR)
#define GPIOB		((GPIO_RegDef_t *)GPIOB_BASEADDR)
#define GPIOC		((GPIO_RegDef_t *)GPIOC_BASEADDR)
#define GPIOD		((GPIO_RegDef_t *)GPIOD_BASEADDR)
#define GPIOE		((GPIO_RegDef_t *)GPIOE_BASEADDR)
#define GPIOF		((GPIO_RegDef_t *)GPIOF_BASEADDR)
#define GPIOG		((GPIO_RegDef_t *)GPIOG_BASEADDR)
#define GPIOH		((GPIO_RegDef_t *)GPIOH_BASEADDR)
#define GPIOI		((GPIO_RegDef_t *)GPIOI_BASEADDR)

#define RCC			((RCC_RegDef_t *)RCC_BASEADDR)

#define EXTI		((EXTI_RegDef_t *)EXTI_BASEADDR)

//....

//....Clock Enable Macros

//1. GPIOx Peripheral
#define GPIOA_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 0))
#define GPIOB_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 1))
#define GPIOC_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 2))
#define GPIOD_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 3))
#define GPIOE_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 4))
#define GPIOF_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 5))
#define GPIOG_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 6))
#define GPIOH_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 7))
#define GPIOI_PCLK_EN() 	(RCC->AHB1ENR |= (1 << 8))

//2. SPI Peripheral
#define SPI1_PCLK_EN() 		(RCC->APB2ENR |= (1 << 12))
#define SPI2_PCLK_EN() 		(RCC->APB1ENR |= (1 << 14))
#define SPI3_PCLK_EN() 		(RCC->APB1ENR |= (1 << 15))

//3. UART Peripheral
#define USART1_PCLK_EN() 	(RCC->APB2ENR |= (1 << 4))
#define USART2_PCLK_EN() 	(RCC->APB1ENR |= (1 << 17))
#define USART3_PCLK_EN() 	(RCC->APB1ENR |= (1 << 18))
#define UART4_PCLK_EN() 	(RCC->APB1ENR |= (1 << 19))
#define UART5_PCLK_EN() 	(RCC->APB1ENR |= (1 << 20))
#define USART6_PCLK_EN() 	(RCC->APB2ENR |= (1 << 5))

//4. I2C Peripheral
#define I2C1_PCLK_EN() 		(RCC->APB1ENR |= (1 << 21))
#define I2C2_PCLK_EN() 		(RCC->APB1ENR |= (1 << 22))
#define I2C3_PCLK_EN() 		(RCC->APB1ENR |= (1 << 23))

//5. SYSCFG Peripheral
#define SYSCFG_PCLK_EN()	(RCC->APB2ENR |= (1 << 14))

//....

//....Clock Disable Macros

//1. GPIOx Peripheral
#define GPIOA_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 0))
#define GPIOB_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 1))
#define GPIOC_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 2))
#define GPIOD_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 3))
#define GPIOE_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 4))
#define GPIOF_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 5))
#define GPIOG_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 6))
#define GPIOH_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 7))
#define GPIOI_PCLK_DI() 	(RCC->AHB1ENR &= ~(1 << 8))

//2. SPI Peripheral
#define SPI1_PCLK_DI() 		(RCC->APB2ENR &= ~(1 << 12))
#define SPI2_PCLK_DI() 		(RCC->APB1ENR &= ~(1 << 14))
#define SPI3_PCLK_DI() 		(RCC->APB1ENR &= ~(1 << 15))

//3. UART Peripheral
#define USART1_PCLK_DI() 	(RCC->APB2ENR &= ~(1 << 4))
#define USART2_PCLK_DI() 	(RCC->APB1ENR &= ~(1 << 17))
#define USART3_PCLK_DI() 	(RCC->APB1ENR &= ~(1 << 18))
#define UART4_PCLK_DI() 	(RCC->APB1ENR &= ~(1 << 19))
#define UART5_PCLK_DI() 	(RCC->APB1ENR &= ~(1 << 20))
#define USART6_PCLK_DI() 	(RCC->APB2ENR &= ~(1 << 5))

//4. I2C Peripheral
#define I2C1_PCLK_DI() 		(RCC->APB1ENR &= ~(1 << 21))
#define I2C2_PCLK_DI() 		(RCC->APB1ENR &= ~(1 << 22))
#define I2C3_PCLK_DI() 		(RCC->APB1ENR &= ~(1 << 23))

//5. SYSCFG Peripheral
#define SYSCFG_PCLK_DI()	(RCC->APB2ENR &= ~(1 << 14))

//....

//GPIO Register Reset Macros
#define GPIOA_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 0)); (RCC->AHB1RSTR &= ~(1 << 0));}
#define GPIOB_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 1)); (RCC->AHB1RSTR &= ~(1 << 1));}
#define GPIOC_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 2)); (RCC->AHB1RSTR &= ~(1 << 2));}
#define GPIOD_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 3)); (RCC->AHB1RSTR &= ~(1 << 3));}
#define GPIOE_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 4)); (RCC->AHB1RSTR &= ~(1 << 4));}
#define GPIOF_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 5)); (RCC->AHB1RSTR &= ~(1 << 5));}
#define GPIOG_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 6)); (RCC->AHB1RSTR &= ~(1 << 6));}
#define GPIOH_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 7)); (RCC->AHB1RSTR &= ~(1 << 7));}
#define GPIOI_REG_RESET() 	{(RCC->AHB1RSTR |= (1 << 8)); (RCC->AHB1RSTR &= ~(1 << 8));}

#define ENABLE  	1
#define DISABLE 	0
#define SET 		ENABLE
#define RESET 		DISABLE


#endif /* INC_STM32F407XX_H_ */
